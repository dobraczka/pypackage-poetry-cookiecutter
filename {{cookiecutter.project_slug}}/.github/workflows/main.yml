# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      {% raw %}
    - name: Set up Python ${{ matrix.python-version }}
      {% endraw %}
      uses: actions/setup-python@v2
      with:
          {% raw %}
        python-version: ${{ matrix.python-version }}
          {% endraw %}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        python -m pip install black
        python -m pip install pep8-naming
        python -m pip install pyflakes
        python -m pip install flake8-bugbear
        python -m pip install flake8-simplify
        python -m pip install pyproject-flake8
        python -m pip install tox

    - name: Check black code style
      run: black --config pyproject.toml --diff {{cookiecutter.module_name}}/ tests/
    - name: Lint with flake8
      run: poetry run pflake8
    - name: Test with tox
      run: tox | tee report.txt

    {%- if not cookiecutter.gist_id == "" %}
    {% raw %}
    - if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    {% endraw %}
      name: Create test coverage badge when on master and not on pull request
      run: |
        echo "cov=$(grep 'TOTAL' report.txt | tail -1 | sed 's/\s\+/,/g' | cut -d',' -f 4 | sed 's/%//g' )" >> $GITHUB_ENV
        rm report.txt
    - name: Get badge color red
      {% raw %}
      if: ${{ env.cov < 51 }}
      {% endraw %}
      run: |
        echo "cov_color=red" >> $GITHUB_ENV
    - name: Get badge color orange
      {% raw %}
      if: ${{ env.cov < 71 && env.cov > 50}}
      {% endraw %}
      run: |
        echo "cov_color=orange" >> $GITHUB_ENV
    - name: Get badge color yellow
      {% raw %}
      if: ${{ env.cov < 81 && env.cov > 70}}
      {% endraw %}
      run: |
        echo "cov_color=yellow" >> $GITHUB_ENV
    - name: Get badge color yellowgreen
      {% raw %}
      if: ${{ env.cov < 86 && env.cov > 80}}
      {% endraw %}
      run: |
        echo "cov_color=yellowgreen" >> $GITHUB_ENV
    - name: Get badge color green
      {% raw %}
      if: ${{ env.cov < 95 && env.cov > 85}}
      {% endraw %}
      run: |
        echo "cov_color=green" >> $GITHUB_ENV
    - name: Get badge color brightgreen
      {% raw %}
      if: ${{ env.cov > 94}}
      {% endraw %}
      run: |
        echo "cov_color=brightgreen" >> $GITHUB_ENV
    - name: Create test badge
      uses: schneegans/dynamic-badges-action@v1.1.0
      with:
      {% raw %}
        auth: ${{ secrets.GIST_SECRET }}
      {% endraw %}
        gistID: {{ cookiecutter.gist_id }}
        filename: {{ cookiecutter.gist_name }}
        label: coverage
        {% raw %}
        message: ${{ env.cov }} %
        color: ${{ env.cov_color }}
        {% endraw %}
    {%- endif %}
