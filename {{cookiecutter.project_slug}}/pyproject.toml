[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name.replace("\"", "\\\"") }} <{{ cookiecutter.email }}>"]
{%- set license_classifiers = {
    "MIT license": "MIT",
    "Apache Software License 2.0": "Apache-2.0",
    "GNU General Public License v3.0": "GPL-3.0-only",
    "GNU General Public License v2.0": "GPL-2.0-only",
    "BSD 3-Clause 'New' or 'Revised' License": "BSD-3-Clause",
    "GNU Lesser General Public License v2.1": "LGPL-2.1-only",
    "BSD 2-Clause 'Simplified' License": "BSD-2-Clause",
} %}
{%- if cookiecutter.open_source_license in license_classifiers %}
license = "{{ license_classifiers[cookiecutter.open_source_license] }}"
{%- endif %}
readme = "README.md"
changelog = "CHANGELOG.md"
keywords = []
classifiers = ["Development Status :: 4 - Beta", "Programming Language :: Python", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3 :: Only"]
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
packages = [
  {include = "{{ cookiecutter.module_name }}"},
  {include = "{{ cookiecutter.module_name }}/py.typed"},
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/issues"
"Source" = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
"Documentation" = "https://{{ cookiecutter.project_slug }}.readthedocs.io"

[tool.poetry.dependencies]
python = ">=3.8,<4.0"


[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.9"
mypy = "^0.960"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
pyproject-flake8 = "^0.0.1a4"
flake8-eradicate = "^1.2.1"
flake8-isort = "^4.1.1"
flake8-debugger = "^4.1.2"
flake8-comprehensions = "^3.10.0"
flake8-print = "^5.0.0"
nox-poetry = "^1.0.0"
black = "^22.3.0"
pytest-mock = "^3.7.0"
pyroma = "^4.1"
xdoctest = "^1.1.0"
pydocstyle = "^6.1.1"
flake8-bugbear = "^22.7.1"
darglint = "^1.8.1"
Sphinx = "^5.0.0"
insegel = "^1.3.1"
toml = "^0.10.2"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
ignore = "E203, E266, E501, W503, F403, F401, C408, D107"
max-line-length = 88
max-complexity = 18
count = "true"
show-source = "true"
statistics = "true"
strictness = "short"
docstring_style = "sphinx"
per-file-ignores = "tests/*: DAR002"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
reverse_relative = true

[tool.cruft]
skip = ["{{ cookiecutter.module_name }}/__init__.py", "tests/", "README.md", "docs/"]
